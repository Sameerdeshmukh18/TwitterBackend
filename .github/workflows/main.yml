name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - devtest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Configure AWS region
      run: aws configure set region ${{ secrets.AWS_REGION }}
      
    - name: Deploy to Elastic Beanstalk
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Upload application code to S3
      run: |
        # Navigate to the workspace directory
        cd $GITHUB_WORKSPACE

        # Zip the Node.js application code
        zip -r my-node-app-code.zip .

        # Upload the ZIP file to the specified S3 bucket
        aws s3 cp my-node-app-code.zip s3://${{ secrets.AWS_S3_BUCKET }}/my-node-app-$(git rev-parse --short HEAD).zip

    - name: Create new Elastic Beanstalk application version
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name ${{ secrets.AWS_EB_APP_NAME }} \
          --version-label "$(git rev-parse --short HEAD)" \
          --source-bundle S3Bucket=${{ secrets.AWS_S3_BUCKET }},S3Key=my-node-app-$(git rev-parse --short HEAD).zip

    - name: Deploy to Elastic Beanstalk
      run: |
        aws elasticbeanstalk update-environment \
          --environment-id ${{ secrets.AWS_EB_ENV_ID }} \
          --version-label "$(git rev-parse --short HEAD)"


    # - name: Deploy to Elastic Beanstalk
    #   run: |
    #     aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws elasticbeanstalk update-environment --environment-id e-sgmem2imph --version-label 13.0

  # Add more steps if needed, such as running tests, etc.
